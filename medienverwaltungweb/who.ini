[plugin:redirector]
# identificaion and challenge
use = repoze.who.plugins.redirector:make_plugin
login_url = /login/login

[plugin:auth_tkt]
# identification and authentication
use = repoze.who.plugins.auth_tkt:make_plugin
secret = s33kr1t
cookie_name = oatmeal
secure = False
include_ip = False

[plugin:basicauth]
# identification and challenge
use = repoze.who.plugins.basicauth:make_plugin
realm = 'Medienverwaltung'

#~ [plugin:htpasswd]
# authentication
#~ use = repoze.who.plugins.htpasswd:make_plugin
#~ filename = %(here)s/passwd
#~ check_fn = repoze.who.plugins.htpasswd:crypt_check

#~ [plugin:sqlusers]
#~ # authentication
#~ use = repoze.who.plugins.sql:make_authenticator_plugin
#~ query = "SELECT userid, password FROM users where login = %(login)s;"
#~ conn_factory = repoze.who.plugins.sql:make_psycopg_conn_factory
#~ compare_fn = repoze.who.plugins.sql:default_password_compare
#~
#~ [plugin:sqlproperties]
#~ name = properties
#~ use = repoze.who.plugins.sql:make_metadata_plugin
#~ query = "SELECT firstname, lastname FROM users where userid = %(__userid)s;"
#~ filter = my.package:filter_propmd
#~ conn_factory = repoze.who.plugins.sql:make_psycopg_conn_factory

[general]
request_classifier = medienverwaltungweb.lib.who.classifiers:default_request_classifier
#~ request_classifier = repoze.who.classifiers:default_request_classifier
challenge_decider = repoze.who.classifiers:default_challenge_decider
#~ challenge_decider = repoze.who.plugins.openid.classifiers:openid_challenge_decider
#~ challenge_decider = medienverwaltungweb.lib.who.classifiers:openid_challenge_decider
remote_user_key = REMOTE_USER

[identifiers]
# plugin_name;classifier_name:.. or just plugin_name (good for any)
plugins =
#      openid
      auth_tkt;browser
      basicauth

[authenticators]
# plugin_name;classifier_name.. or just plugin_name (good for any)
plugins =
#      openid;browser
      auth_tkt;browser
#      htpasswd;browser
      medienverwaltungweb.lib.who.auth:UserModelPlugin
#      sqlusers

[challengers]
# plugin_name;classifier_name:.. or just plugin_name (good for any)
plugins =
#      redirector;browser
#      openid
      basicauth

#~ [mdproviders]
#~ plugins =
#      sqlproperties

; [plugin:openid]
; # identification and challenge
; use = repoze.who.plugins.openid:make_identification_plugin
; # sql and file are possible here with different configurations
; store = file
; store_file_path = %(here)s/data/sstore
; openid_field = openid
; came_from_field = came_from
; error_field = error
; session_name = beaker.session
; login_form_url = /login/login_form
; login_handler_path = /login/do_login
; logout_handler_path = /login/logout
; logged_in_url = /login/success
; logged_out_url = /login/logout_success
; rememberer_name = auth_tkt
